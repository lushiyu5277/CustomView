<resources>
    <string name="app_name">CustomView</string>
    <string name="trans_edge_test_str">当用户做出某种您识别为开始拖拽数据的手势时，拖放操作开始。 作为响应，您的应用会告知系统正在开始拖拽。 系统回调应用，以获取正在拖拽的数据的表示。 用户手指在当前布局上移动此表示（“拖拽阴影”）的过程中，系统将拖拽事件发送到与布局中的 View 对象相关联的拖拽事件侦听器对象和拖拽事件回调方法。 用户释放拖拽阴影后，系统立即结束拖拽操作。

从实现 View.OnDragListener 的类创建拖拽事件侦听器对象（“listeners”）。 使用视图对象的 setOnDragListener() 方法为视图设置拖拽事件侦听器对象。 每个视图对象还有一个 onDragEvent() 回调方法。 在拖拽事件侦听器和回调方法部分对以上两者进行了更详细的说明。在开始拖拽时，将您想要移动的数据和描述此数据的元数据均包含在系统调用中。 在拖拽期间，系统会将拖拽事件发送到布局中每个视图的拖拽事件侦听器或回调方法。 这些侦听器或回调方法可使用元数据来确定其在数据被放下时是否想要接受这些数据。 如果用户将数据放到某个视图对象上，并且该视图对象的侦听器或回调方法之前已告知系统它想要接受放下的数据，则系统会将该数据发送到拖拽事件中的侦听器或回调方法。

您的应用通过调用 startDrag() 方法告知系统开始拖拽。 这将告知系统开始发送拖拽事件。该方法还会发送正在拖拽的数据。

您可以为当前布局中任意已连接的视图调用 startDrag()。 系统仅使用视图对象获取布局中的全局设置访问权限。

应用调用 startDrag() 之后，该过程的剩余部分将使用系统发送给当前布局中的视图对象的事件。

</string>
</resources>
